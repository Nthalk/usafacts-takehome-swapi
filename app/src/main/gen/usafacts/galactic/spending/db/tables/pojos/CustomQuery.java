/*
 * This file is generated by jOOQ.
 */
package usafacts.galactic.spending.db.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import usafacts.galactic.spending.db.tables.interfaces.ICustomQuery;


/**
 * The table <code>custom_query</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CustomQuery implements ICustomQuery {

    private static final long serialVersionUID = 1L;

    private Integer queryId;
    private String name;
    private String description;
    private String query;
    private String tableName;
    private LocalDateTime createdAt;

    public CustomQuery() {}

    public CustomQuery(ICustomQuery value) {
        this.queryId = value.getQueryId();
        this.name = value.getName();
        this.description = value.getDescription();
        this.query = value.getQuery();
        this.tableName = value.getTableName();
        this.createdAt = value.getCreatedAt();
    }

    public CustomQuery(
        Integer queryId,
        String name,
        String description,
        String query,
        String tableName,
        LocalDateTime createdAt
    ) {
        this.queryId = queryId;
        this.name = name;
        this.description = description;
        this.query = query;
        this.tableName = tableName;
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>custom_query.query_id</code>.
     */
    @Override
    public Integer getQueryId() {
        return this.queryId;
    }

    /**
     * Setter for <code>custom_query.query_id</code>.
     */
    @Override
    public CustomQuery setQueryId(Integer queryId) {
        this.queryId = queryId;
        return this;
    }

    /**
     * Getter for <code>custom_query.name</code>.
     */
    @NotNull
    @Size(max = 100)
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>custom_query.name</code>.
     */
    @Override
    public CustomQuery setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>custom_query.description</code>.
     */
    @NotNull
    @Size(max = 1000)
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>custom_query.description</code>.
     */
    @Override
    public CustomQuery setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>custom_query.query</code>.
     */
    @NotNull
    @Size(max = 1000)
    @Override
    public String getQuery() {
        return this.query;
    }

    /**
     * Setter for <code>custom_query.query</code>.
     */
    @Override
    public CustomQuery setQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Getter for <code>custom_query.table_name</code>.
     */
    @NotNull
    @Size(max = 100)
    @Override
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Setter for <code>custom_query.table_name</code>.
     */
    @Override
    public CustomQuery setTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }

    /**
     * Getter for <code>custom_query.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>custom_query.created_at</code>.
     */
    @Override
    public CustomQuery setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CustomQuery other = (CustomQuery) obj;
        if (this.queryId == null) {
            if (other.queryId != null)
                return false;
        }
        else if (!this.queryId.equals(other.queryId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.query == null) {
            if (other.query != null)
                return false;
        }
        else if (!this.query.equals(other.query))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.queryId == null) ? 0 : this.queryId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.query == null) ? 0 : this.query.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CustomQuery (");

        sb.append(queryId);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(query);
        sb.append(", ").append(tableName);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICustomQuery from) {
        setQueryId(from.getQueryId());
        setName(from.getName());
        setDescription(from.getDescription());
        setQuery(from.getQuery());
        setTableName(from.getTableName());
        setCreatedAt(from.getCreatedAt());
    }

    @Override
    public <E extends ICustomQuery> E into(E into) {
        into.from(this);
        return into;
    }
}
